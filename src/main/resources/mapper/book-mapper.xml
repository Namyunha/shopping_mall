<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="Book">
    <insert id="save" parameterType="book" useGeneratedKeys="true" keyProperty="id">
        insert into book_table(sellerId, bookName, unitPrice, unitsInStock, author, descript, publisher, category,
                               conditions, fileAttached)
        values (#{sellerId}, #{bookName}, #{unitPrice}, #{unitsInStock}, #{author}, #{descript}, #{publisher},
                #{category}, #{conditions}, #{fileAttached})
    </insert>


    <insert id="saveFile" parameterType="bookFile">
        insert into book_file_table(originalFileName, storedFileName, bookId)
        values (#{originalFileName}, #{storedFileName}, #{bookId})
    </insert>


    <insert id="saveCart" parameterType="cart">
        insert into cart_table(bookId, customerId, bookCount)
        values (#{bookId}, #{customerId}, #{bookCount})
    </insert>


    <insert id="saveOrder" parameterType="order">
        insert into order_table(customerId, sumCount, sumPrice, customerName, payConditions, shipmentConditions,
                                address, email)
        values (#{customerId}, #{sumCount}, #{sumPrice}, #{customerName}, #{payConditions}, #{shipmentConditions},
                #{address}, #{email})
    </insert>


    <insert id="saveChangeList" parameterType="java.util.List">
        INSERT INTO change_book_table (customerId, bookId, bookCount, cartId)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.customerId}, #{item.bookId}, #{item.bookCount}, #{item.cartId})
        </foreach>
    </insert>


    <!--장바구니 넣은 후에 책의 buyer 값과 buyCount 넣어주기-->


<!--    <insert id="saveChangeList" parameterType="java.util.List">-->
<!--        INSERT INTO change_book_table (customerId, bookId, bookCount)-->
<!--        VALUES-->
<!--        <foreach collection="list" item="changeBook" separator=",">-->
<!--            (#{changeBook.customerId}, #{changeBook.bookId}, #{changeBook.bookCount})-->
<!--        </foreach>-->
<!--    </insert>-->


    <select id="findCart" parameterType="Long" resultType="cart">
        select *
        from cart_table
        where customerId = #{customerId}
    </select>


    <select id="selectList" resultType="books">
        select *
        from book_file_table f,
             book_table b
        where f.bookId = b.id;
    </select>


    <select id="selectFile" parameterType="Long" resultType="bookFile">
        select *
        from book_file_table
        where bookId = #{id};
    </select>


    <select id="findById" parameterType="Long" resultType="books">
        select *
        from book_file_table f,
             book_table b
        where f.bookId = b.id
          and b.id = #{bookId};
    </select>


    <select id="selectAll" parameterType="Long" resultType="cbook">
        select b.id, b.bookName, sum(c.bookCount) as 'unitsInStock', b.unitPrice, b.sellerId
        from cart_table c,
             book_table b
        where c.customerId = #{loginNum}
          and b.id = c.bookId
        group by c.bookId;
    </select>


    <select id="findSum" parameterType="Long" resultType="result">
        select sum(c.bookCount * b.unitPrice) as 'sumPrice', sum(bookCount) as 'sumCount'
        from book_table b,
             cart_table c
        where c.customerId = #{id}
          and b.id = c.bookId;
    </select>


    <select id="orderList" parameterType="Long" resultType="order">
        select *
        from order_table
        where customerId = #{id}
    </select>


    <select id="cbookList" parameterType="Long" resultType="cbook">
        select *
        from book_table b,
             cart_table c
        where c.customerId = #{loginNum}
          and c.bookId = b.id;
    </select>


    <delete id="delete" parameterType="Long">
        delete
        from cart_table
        where bookId = #{id};
    </delete>


    <update id="updateCart" parameterType="java.util.Map">
        update cart_table
        set bookCount=#{bookCount}
        where bookId = #{bookId};
    </update>


    <update id="updateBook" parameterType="java.util.Map">
        update book_table
        set unitsInStock=#{unitsInStocks}
        where id = #{bookId};
    </update>


</mapper>














